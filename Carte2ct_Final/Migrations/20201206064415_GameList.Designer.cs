// <auto-generated />
using System;
using Carte2ct_Final.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Carte2ct_Final.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20201206064415_GameList")]
    partial class GameList
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Carte2ct_Final.Models.Games", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("GenreId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rating")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("GameId");

                    b.HasIndex("GenreId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameId = 4,
                            GenreId = "AA",
                            Name = "Doom",
                            Rating = 5,
                            Year = 1993
                        },
                        new
                        {
                            GameId = 2,
                            GenreId = "A",
                            Name = "Halo",
                            Rating = 3,
                            Year = 2001
                        },
                        new
                        {
                            GameId = 3,
                            GenreId = "S",
                            Name = "Sonic",
                            Rating = 4,
                            Year = 1991
                        });
                });

            modelBuilder.Entity("Carte2ct_Final.Models.Genre", b =>
                {
                    b.Property<string>("GenreId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = "A",
                            Name = "Action"
                        },
                        new
                        {
                            GenreId = "AA",
                            Name = "Adventure"
                        },
                        new
                        {
                            GenreId = "R",
                            Name = "RPG"
                        },
                        new
                        {
                            GenreId = "S",
                            Name = "Strategy"
                        },
                        new
                        {
                            GenreId = "M",
                            Name = "MMO"
                        });
                });

            modelBuilder.Entity("Carte2ct_Final.Models.Games", b =>
                {
                    b.HasOne("Carte2ct_Final.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });
#pragma warning restore 612, 618
        }
    }
}
